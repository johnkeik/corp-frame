:root {

  // These can be overriden by latte theme custom styles
  // Hopefully we can integrate the ones that match the POS Latte theme variables 
  // with the CSS classnames generated by the theme editors to avoid having to type them as custom CSS
  // However we should be able to overrid any variable using custom CSS
  // ––––––––––––––––––––––––––––––––––––––––––––––––––

  // Design colors: As defined here: https://www.figma.com/file/Iy4Zw1bL0jett1Gv5VyhlU/Online-Ordering-New-Layout
  --white: #fff;   //!!!!! white should be renamed !!!!!!
  --primary: #d44316;
  --primary-inverse: var(--white);
  --primary-dark: #c2390f;
  --primary-container: #ffe6de;
  --text: #353535;
  --text-unselected: #737373;
  --grey: #6a6a6a;
  --grey-background: #ebebeb;
  --page-background: #f0f0f0;
  --line-color: #dadada;
  --disabled-tile: #fafafa;

  //general colors
  --general-red: #C72929;
  --general-red-white: #fff;
  --general-red-container: #FFE1E1;
  --general-green: #0E775C;
  --general-green-white: #fff;
  --general-green-container: #D3F3EC;

  //order history
  --favorite-order-grey: #aaa;
  
  // Derived from designs
  --shadow-color: #2c2b2b33;
  --nav-shadow-color: #5353531a;
  --table-border: #e8e8e8;



  --desktop-header-height: 90px;
  //Predefined Values. Should not be changed
  //Exist to update the --main-header-height
  --mobile-main-header-height: 65px;
  --main-header-height: 90px;

  /***** Sticky stack **************************************************************************
    This is an easy way to create sticky elements that stack on top
    of each other. This requires minimal javascript as the only thing we need
    is setting up the height of the elements that are are hidden/shown dynamically.
    
    Each sticky element needs a pair of variables in this file.
    One for its height, and one for its top offset position calculation.
    The top offset is calculated by adding the element's height to the top position
    of its previous stacking element.

    If you need to show/hide a stacked element dynamically at runtime
    you just have to set its height using javascript e.g. :
    >>> document.documentElement.style.setProperty('--top-banner-sticky-top', '50px'); <<<
    !TODO: This will be handled centrally in a service or static class/function

    If you need to add another sticky element you will have to add a new pair
    of height/top variables for it.

      >> NOTE: You can even change these values from custom CSS themes, which gives
         customers flexibility editing the layout using custom CSS
  */
  
  --main-header-sticky-top: 0px;

  --main-pages-offset: calc(var(--main-header-sticky-top) + var(--main-header-height));
  //***********************************************************************************************



  --primary-light: color-mix(in srgb, var(--primary) 50%, white);

  // z-indexes: Group z-index values here so that we can easily compare them
  // Best practice is to keep generic z indexes in batches of 100
  --header-z-index: 300;

}

