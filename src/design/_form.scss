// Form
// ––––––––––––––––––––––––––––––––––––––––––––––––––
@import './mixins/media-queries';

input[type='color'],
input[type='date'],
input[type='datetime'],
input[type='datetime-local'],
input[type='email'],
input[type='month'],
input[type='number'],
input[type='password'],
input[type='search'],
input[type='tel'],
input[type='text'],
input[type='url'],
input[type='week'],
input:not([type]),
textarea,
select {
  -webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes
  background-color: var(--grey-background);
  border: 1px solid var(--text);
  border: none;
  border-radius: 0.5rem;
  box-shadow: none;
  box-sizing: inherit; // Forced to replace inherit values of the normalize.css
  height: 3.25rem;
  padding: 1.375rem 1.5rem;
  width: 100%;
  font-size: 1.25rem;
  font-weight: 400;

  &:focus {
    border: 1px solid var(--text);
    background-color: var(--white);
    outline: 0;
  }
  
  &:before,
  &:after {
    box-sizing: border-box;
  }

  &.placeholder-shown {
    border-color: transparent;

  }

  &.isDirty {
    border: 1px solid var(--text);
    background-color: var(--white);
  }
  
  &.hasError {
    border: 1px solid var(--general-red);
  }

  &:disabled {
    border-color: var(--page-background);
    color: var(--text);
    
  }
}
input::placeholder {
  color:transparent;
}


input.themed-input {
  -webkit-appearance: none;
  background-color: var(--grey-background);
  color: var(--text);
  border: none;
  border-radius: 0.5rem;
  padding-left: 1.5rem;
  padding-top: 1.406rem;
  padding-bottom: 1.344rem;
  font-size: 1.25rem;

  &.rounded {
    border-radius: 3.75rem;
  }
} 

.themed-input::placeholder {
  color: var(--grey);
}

select {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 8" width="30"><path fill="%23'+str-slice(
        inspect(var(--border-color)),
        2
      )+'" d="M0,0l6,8l6-8"/></svg>')
    center right no-repeat;
  padding-right: 1.875rem;

  &:focus {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 8" width="30"><path fill="%23'+str-slice(
        inspect(var(--action-bg-color)),
        2
      )+'" d="M0,0l6,8l6-8"/></svg>');
  }

  &[multiple] {
    background: none;
    height: auto;
  }
}

textarea {
  min-height: 4rem;
}

label,
legend {
  display: block;
  font-size: 1rem;
  font-weight: 700;
  margin-bottom: 0.3125rem;
}

fieldset {
  border-width: 0;
  padding: 0;
}

input[type='checkbox'],
input[type='radio'] {
  display: inline;
}

.label-inline {
  display: inline-block;
  font-weight: normal;
  margin-left: 0.3125rem;
}

[type="checkbox"],
[type="radio"] {
  &:before,
  &:after {
    box-sizing: border-box;
  }
}

////////////////////////////////////////////////////////////
// Custom radio button /////////////////////////////////////
////////////////////////////////////////////////////////////
input[type="radio"].themed-radio {
  -webkit-appearance: none;
  appearance: none;

  display: grid;
  place-content: center;
  inline-size: 1.5em; // 24px
  block-size: 1.5em; // 24px

  border-width: 0.0625em; // 1px
  border-style: solid;
  border-radius: 50%;
  border-color: var(--secondary-text-color);

  &::after {
    content: "";
    width: 0.875em; // 14px
    height: 0.875em; // 14px
    border-radius: 50%;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 0.875em 0.875em var(--primary);
  }

  &:checked::after {
    transform: scale(1);
  }

  &:checked {
    color: var(--primary);
    border-color: var(--primary);
  }
}

////////////////////////////////////////////////////////////
// Custom checkbox /////////////////////////////////////////
////////////////////////////////////////////////////////////
input[type="checkbox"].themed-checkbox {
  -webkit-appearance: none;
  appearance: none;

  display: grid;
  place-content: center;
  min-width: 1.5rem;
  height: 1.5rem;

  color: var(--secondary-text-color);
  border-width: 0.0625em; // 1px
  border-style: solid;
  border-radius: 0.125em;
  background-color: transparent;
  transition: 120ms background-color ease-in-out;

  &::after {
    content: "";
    width: 1.25rem; 
    height: 1.25rem;

    transform-origin: bottom left;
    // The svg mask-image has the same effect as the clip-path css property, and has better browser support
    mask-image: url('/assets/icons/check.svg');
    mask-repeat: no-repeat;
    mask-size: cover;
    transition: 120ms all ease-in-out;
    transform: scale(0);
  }

  &:checked::after {
    transform: scale(1);
    background: var(--white);
  }

  &:checked {
    color: var(--primary);
    background-color: var(--primary);
  }
}

// Style label that wraps accent controls
// This may be extended to include other form controls
label:has(.themed-radio, .themed-checkbox) {
  display: flex;
  align-items: center;
  gap: 1em;
  color: var(--secondary-text-color);

/* TODO: May enable this based on the default font
  // Fix specific font vertical alignment (see: https://stackoverflow.com/a/71239943/2025271)
  input {
    margin-top: -0.1em;
  }
*/
}


// Focus outline for screen readers (and keyboard navigation)
// This will be extended to include other form controls
.themed-radio, .themed-checkbox { 
  &:focus-visible {
    outline-style: solid;
    outline-color: var(--primary-light);
    outline-offset: 0.125em; // 2px
    outline-width: 0.125em; // 2px
  }
}



//Error bellow the inputs
//proper format example
// <span class="input-error">
// <cwo-icon class="icon" [name]="iconNameType.error"></cwo-icon>{{errors?.name?.length ? errors!.name[0] : validationMessages.name.required}}.
// </span>
.input-error {
  font-size: 0.875rem;
  line-height: 0.875rem;
  color: var(--general-red);
  display: flex;
  align-items: start;
  gap: 0.5rem;
  height: 100%;
  padding-top: 0.25rem;
  font-weight: 500;
  word-break: break-all;

  .icon {
    width: 0.875rem;
    height: 0.875rem;
  }
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0px 1000px var(--white) inset;
  box-shadow: 0 0 0px 1000px var(--white) inset;
}

input[type="password"]::-ms-reveal {
  display: none;
}